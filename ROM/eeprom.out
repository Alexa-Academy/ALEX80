# File eeprom.z80
0000			; Codice EEPROM per ALEX80 da usare in combinazione con z80_analyzer o alex80_manager_terminal su Arduino MEGA 
0000			; Fa lampeggaire il LED BLU in attesa di ricevere un NMI 
0000			; che fa saltare all'inizio della RAM (dove deve essere 
0000			; caricato il programma che si vuole eseguire) 
0000			; 
0000			; Assemblato con https://www.nongnu.org/z80asm/ 
0000			; 
0000			; z80asm -o eeprom.bin -l eeprom.z80 2> eeprom.out  
0000			 
0000			PORT_A_DATA: EQU 0x0 
0000			PORT_A_CTRL: EQU 0x1 
0000			PORT_B_DATA: EQU 0x2 
0000			PORT_B_CTRL: EQU 0x3 
0000			 
0000			boot: 
0000 31 00 00		    LD SP, 0 
0003 ed 5e		    IM 2 
0005 f3			    DI 
0006			 
0006			; Fa lampeggiare il LED blu collegato al bit 0 della porta B del PIO 
0006 3e 0f		    LD A, 0Fh    ; Imposta il modo 0 per la porta B 
0008 d3 03		    OUT (PORT_B_CTRL), A 
000a			 
000a af			    XOR A 
000b			 
000b			loop: 
000b d3 02		    OUT (PORT_B_DATA), A 
000d 3c			    INC A 
000e			 
000e 11 60 ea		    LD DE, 60000 
0011 cd 20 00		    CALL delay 
0014			 
0014 d3 02		    OUT (PORT_B_DATA), A 
0016 3c			    INC A 
0017			 
0017 11 10 27		    LD DE, 10000 
001a cd 20 00		    CALL delay 
001d			 
001d c3 0b 00		    JP loop 
0020			 
0020			delay: 
0020 08			    EX AF, AF' 
0021			delay1_loop: 
0021 1b			    DEC de 
0022 7a			    LD a,d 
0023 b3			    OR e 
0024 c2 21 00		    JP nz, delay1_loop 
0027 08			    EX AF, AF' 
0028 c9			    RET 
0029			 
0029 00...		ds 0x66 - $  ; Riempie di 00 tutta la memoria fino all'indirizzo 0x66 
0066			nmi: 
0066 c3 00 80		    JP 0x8000 
# End of file eeprom.z80
0069
